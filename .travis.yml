dist: xenial
sudo: required

matrix:
  fast_finish: true
  allow_failures:
    - os: osx

  include:
    - os: linux
      services:
        - docker
      env: OSNAME=linux_openresty
    - os: osx
      env: OSNAME=osx_openresty
      if: type IN (push)
      cache:
        directories:
          - $HOME/Library/Caches/Homebrew
          - /usr/local/Homebrew
    - os: linux
      services:
        - docker
      env: OSNAME=linux_tengine
    - os: linux
      env: OSNAME=linux_apisix_master_luarocks
    - os: linux
      env: OSNAME=linux_apisix_current_luarocks

language: c

addons:
  apt:
    packages:
      - cpanminus
      - build-essential
      - libncurses5-dev
      - libreadline-dev
      - libssl-dev
      - perl
      - etcd
      - luarocks
      - lua-check
  homebrew:
    update: true

cache:
  directories:
    - build-cache

before_cache:
  - brew cleanup

before_install:
  - docker pull redis:3.0-alpine
  - docker pull bitnami/zookeeper:3.6.0
  - docker pull bitnami/kafka:latest
  - docker run --rm -itd -p 6379:6379 --name apisix_redis redis:3.0-alpine
  - docker network create kafka-net --driver bridge
  - docker run --name zookeeper-server -d -p 2181:2181 --network kafka-net -e ALLOW_ANONYMOUS_LOGIN=yes bitnami/zookeeper:3.6.0
  - docker run --name kafka-server1 -d --network kafka-net -e ALLOW_PLAINTEXT_LISTENER=yes -e KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-server:2181 -e KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092 -p 9092:9092 -e KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true bitnami/kafka:latest
  - sleep 10
  - docker exec -it kafka-server1 /opt/bitnami/kafka/bin/kafka-topics.sh --create --zookeeper zookeeper-server:2181 --replication-factor 1 --partitions 1 --topic test2
  - echo $OSNAME
  - $PWD/.travis/${OSNAME}_runner.sh before_install

install:
  - $PWD/.travis/${OSNAME}_runner.sh do_install

script:
  - $PWD/.travis/${OSNAME}_runner.sh script

after_success:
  - $PWD/.travis/${OSNAME}_runner.sh after_success
